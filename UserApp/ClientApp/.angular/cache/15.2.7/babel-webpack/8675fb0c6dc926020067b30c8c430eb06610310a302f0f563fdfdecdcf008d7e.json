{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardCharacterComponent = class DashboardCharacterComponent {\n  constructor(route, dashboardCharacterService, cdr) {\n    this.route = route;\n    this.dashboardCharacterService = dashboardCharacterService;\n    this.cdr = cdr;\n    this.urlCharacters = \"https://rickandmortyapi.com/api/character/\";\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const name = params['name'];\n      const episode = params['episode'];\n      const urls = params['characters'] ? params['characters'] : [];\n      this.getData(name, episode, urls);\n    });\n  }\n  getData(name, episode, urls) {\n    const urlsArray = urls.split(',');\n    const charactersIds = urlsArray.map(url => url.split('/').pop());\n    var urlApi = this.urlCharacters + charactersIds;\n    this.dashboardCharacterService.getData(urlApi).subscribe(data => {\n      console.log('data response:', data);\n      this.character = data;\n      this.cdr.detectChanges();\n    }, error => {\n      console.error(\"Hubo un error:\", error);\n    });\n  }\n};\nDashboardCharacterComponent = __decorate([Component({\n  selector: 'app-dashboard-character',\n  templateUrl: './dashboard-character.component.html',\n  styleUrls: ['./dashboard-character.component.css']\n})], DashboardCharacterComponent);\nexport { DashboardCharacterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAGtCC,YAAoBC,KAAqB,EAAUC,yBAAoD,EAAUC,GAAsB;IAAnH,UAAK,GAALF,KAAK;IAA0B,8BAAyB,GAAzBC,yBAAyB;IAAqC,QAAG,GAAHC,GAAG;IADpH,kBAAa,GAAW,4CAA4C;EACuE;EAE3IC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,IAAI,GAAGF,MAAM,CAAC,MAAM,CAAC;MAC3B,MAAMG,OAAO,GAAGH,MAAM,CAAC,SAAS,CAAC;MACjC,MAAMI,IAAI,GAAGJ,MAAM,CAAC,YAAY,CAAC,GAAGA,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE;MAC7D,IAAI,CAACK,OAAO,CAACH,IAAI,EAAEC,OAAO,EAAEC,IAAI,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAC,OAAO,CAACH,IAAY,EAAEC,OAAe,EAAEC,IAAY;IACjD,MAAME,SAAS,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IACjC,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACH,KAAK,CAAC,GAAG,CAAC,CAACI,GAAG,EAAE,CAAC;IAChE,IAAIC,MAAM,GAAG,IAAI,CAACC,aAAa,GAAGL,aAAa;IAC/C,IAAI,CAACX,yBAAyB,CAACQ,OAAO,CAACO,MAAM,CAAC,CAACX,SAAS,CACrDa,IAAI,IAAI;MACPC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnC,IAAI,CAACG,SAAS,GAAGH,IAAI;MACrB,IAAI,CAAChB,GAAG,CAACoB,aAAa,EAAE;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRJ,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,CACF;EACH;CACD;AA7BYzB,2BAA2B,eALvCD,SAAS,CAAC;EACT2B,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,GACW5B,2BAA2B,CA6BvC;SA7BYA,2BAA2B","names":["Component","DashboardCharacterComponent","constructor","route","dashboardCharacterService","cdr","ngOnInit","params","subscribe","name","episode","urls","getData","urlsArray","split","charactersIds","map","url","pop","urlApi","urlCharacters","data","console","log","character","detectChanges","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard-character\\dashboard-character.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DashboardCharacterService } from '../dashboard-character/dashboard-character.service';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { Character } from '../shared/models/character';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-dashboard-character',\n  templateUrl: './dashboard-character.component.html',\n  styleUrls: ['./dashboard-character.component.css']\n})\nexport class DashboardCharacterComponent {\n  character?: Character[];\n  urlCharacters: string = \"https://rickandmortyapi.com/api/character/\";\n  constructor(private route: ActivatedRoute, private dashboardCharacterService: DashboardCharacterService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const name = params['name'];\r\n      const episode = params['episode'];\r\n      const urls = params['characters'] ? params['characters'] : [];\n      this.getData(name, episode, urls);\r\n    });\n  }\n\n  getData(name: string, episode: string, urls: string): void {\r\n    const urlsArray = urls.split(',');\n    const charactersIds = urlsArray.map(url => url.split('/').pop());\n    var urlApi = this.urlCharacters + charactersIds;\n    this.dashboardCharacterService.getData(urlApi).subscribe(\r\n      (data) => {\n        console.log('data response:', data);\r\n        this.character = data;\n        this.cdr.detectChanges();\r\n      },\r\n      (error) => {\r\n        console.error(\"Hubo un error:\", error)\r\n      }\r\n    );\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}