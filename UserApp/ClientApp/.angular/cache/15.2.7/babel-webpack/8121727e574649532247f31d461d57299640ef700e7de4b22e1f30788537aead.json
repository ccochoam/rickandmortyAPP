{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../dashboard/dashboard.service\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardComponent_div_0_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.air_date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.episode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.characters);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r4.url);\n  }\n}\nfunction DashboardComponent_div_0_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_0_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.cargarPagina(ctx_r5.paginaActual + 1));\n    });\n    i0.ɵɵtext(1, \" Siguiente \\u2192 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Episodios de Rick & Morty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n    i0.ɵɵtext(8, \"T\\u00EDtulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Primera emisi\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Episodio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Personajes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"URL\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"tbody\", 2);\n    i0.ɵɵtemplate(18, DashboardComponent_div_0_tr_18_Template, 11, 5, \"tr\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"tfoot\")(20, \"tr\")(21, \"td\", 4);\n    i0.ɵɵtemplate(22, DashboardComponent_div_0_button_22_Template, 2, 0, \"button\", 5);\n    i0.ɵɵelementStart(23, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_0_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.nextPage());\n    });\n    i0.ɵɵtext(24, \"P\\u00E1gina siguiente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_0_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.previousPage());\n    });\n    i0.ɵɵtext(26, \"P\\u00E1gina anterior\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.episodesResponse.results);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.paginaActual < ctx_r0.totalPaginas);\n  }\n}\nfunction DashboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No se encontraron datos.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService, cdr) {\n    this.dashboardService = dashboardService;\n    this.cdr = cdr;\n    this.currentPage = 1;\n    this.totalPages = 0;\n  }\n  ngOnInit() {\n    this.getData(this.currentPage);\n  }\n  goToPage(pageNumber) {\n    this.currentPage = pageNumber;\n  }\n  getData(pageNumber) {\n    this.currentPage = pageNumber;\n    this.dashboardService.getData(this.currentPage).subscribe(data => {\n      console.log('resDashboardComponent:', data);\n      this.totalPages = data.info.pages;\n      this.episodesResponse = data;\n      this.cdr.detectChanges();\n    }, error => {\n      console.error('Error al obtener datos:', error);\n    });\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.getData(this.currentPage - 1);\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.getData(this.currentPage + 1);\n    }\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"table-container\"], [1, \"scrollable-body\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"5\", 1, \"border-foot\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DashboardComponent_div_0_Template, 27, 2, \"div\", 0);\n      i0.ɵɵtemplate(1, DashboardComponent_div_1_Template, 3, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.episodesResponse && ctx.episodesResponse.results && ctx.episodesResponse.results.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.episodesResponse || !ctx.episodesResponse.results || ctx.episodesResponse.results.length === 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".table-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  overflow-x: auto;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  border-collapse: collapse;\\r\\n  margin-top: 10px;\\r\\n}\\r\\ntbody[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  height: 400px;\\r\\n  overflow: auto;\\r\\n}\\r\\nthead[_ngcontent-%COMP%], tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%] {\\r\\n  display: table;\\r\\n  width: 100%;\\r\\n  table-layout: fixed;\\r\\n}\\r\\nthead[_ngcontent-%COMP%] {\\r\\n  width: calc( 100% - 1em )\\r\\n}\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid #ddd;\\r\\n  padding: 8px;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n  background-color: #f2f2f2;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 3px;\\r\\n  margin: 3px;\\r\\n  background-color: #3498db;\\r\\n  color: #fff;\\r\\n  border: none;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n  float:right;\\r\\n}\\r\\n.border-foot[_ngcontent-%COMP%]{\\r\\n    border:none;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #1861ac;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdDQUFnQztBQUNoQztFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGNBQWM7RUFDZCxhQUFhO0VBQ2IsY0FBYztBQUNoQjtBQUNBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7QUFDQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLFdBQVc7QUFDYjtBQUNBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBtaS1jb21wb25lbnRlLmNvbXBvbmVudC5jc3MgKi9cclxuLnRhYmxlLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbnRib2R5IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcbnRoZWFkLCB0Ym9keSB0ciB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGFibGUtbGF5b3V0OiBmaXhlZDtcclxufVxyXG50aGVhZCB7XHJcbiAgd2lkdGg6IGNhbGMoIDEwMCUgLSAxZW0gKVxyXG59XHJcbnRoLCB0ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxudGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgcGFkZGluZzogM3B4O1xyXG4gIG1hcmdpbjogM3B4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZmxvYXQ6cmlnaHQ7XHJcbn1cclxuLmJvcmRlci1mb290e1xyXG4gICAgYm9yZGVyOm5vbmU7XHJcbn1cclxuYnV0dG9uOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg2MWFjO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DashboardComponent","constructor","dashboardService","cdr","ngOnInit","getData","currentPage","goToPage","pageNumber","subscribe","data","console","log","totalPages","info","pages","episodesResponse","detectChanges","error","previousPage","nextPage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard\\dashboard.component.html","D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["<div *ngIf=\"episodesResponse && episodesResponse.results && episodesResponse.results.length > 0\">\n    <h2>Episodios de Rick & Morty</h2>\n    <div class=\"table-container\">\n        <table>\n            <thead>\n                <tr>\n                    <th>Título</th>\n                    <th>Primera emisión</th>\n                    <th>Episodio</th>\n                    <th>Personajes</th>\n                    <th>URL</th>\n                </tr>\n            </thead>\n            <tbody class =\"scrollable-body\">\n                <tr *ngFor=\"let row of episodesResponse.results\">\n                    <td>{{ row.name }}</td>\n                    <td>{{ row.air_date }}</td>\n                    <td>{{ row.episode }}</td>\n                    <td>{{ row.characters }}</td>\n                    <td>{{ row.url }}</td>\n                </tr>\n            </tbody>\n            <tfoot>\n                <tr>\n                    <td colspan=\"5\" class=\"border-foot\">\n                        <button (click)=\"cargarPagina(paginaActual + 1)\" *ngIf=\"paginaActual < totalPaginas\">\n                            Siguiente &#8594;\n                        </button>\n                        <button (click)=\"nextPage()\">Página siguiente</button>\n                        <button (click)=\"previousPage()\">Página anterior</button>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n    </div>\n</div>\n<div *ngIf=\"!episodesResponse || !episodesResponse.results || episodesResponse.results.length === 0\">\n    <p>No se encontraron datos.</p>\n</div>\n","import { Component } from '@angular/core';\nimport { DashboardService } from '../dashboard/dashboard.service';\nimport { EpisodesResponse } from '../dashboard/interfaces/episodes-response';\nimport { Episode } from '../dashboard/interfaces/episode';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  episodesResponse?: EpisodesResponse;\n  private currentPage: number = 1;\n  private totalPages: number = 0;\n  constructor(private dashboardService: DashboardService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.getData(this.currentPage);\n  }\n  goToPage(pageNumber: number): void {\r\n\n    this.currentPage = pageNumber;\n  }\n  getData(pageNumber: number): void {\n    this.currentPage = pageNumber;\n    this.dashboardService.getData(this.currentPage).subscribe(\n      (data) => {\n        console.log('resDashboardComponent:', data);\n        this.totalPages = data.info.pages;\n        this.episodesResponse = data;\n        this.cdr.detectChanges();\n      },\n      (error) => {\n        console.error('Error al obtener datos:', error);\n      }\n    );\n  }\n  previousPage(): void {\n    if (this.currentPage > 1) {\r\n      this.getData(this.currentPage - 1);\r\n    }\n  }\n  nextPage(): void {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.getData(this.currentPage + 1);\r\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}