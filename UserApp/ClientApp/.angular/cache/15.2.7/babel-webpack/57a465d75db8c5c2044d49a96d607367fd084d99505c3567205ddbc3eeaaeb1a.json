{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../dashboard-character/dashboard-character-service.service\";\nexport class DashboardCharacterComponent {\n  constructor(route, dashboardCharacterServiceService, cdr) {\n    this.route = route;\n    this.dashboardCharacterServiceService = dashboardCharacterServiceService;\n    this.cdr = cdr;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      const urls = params['characters'];\n      this.getData(id, urls);\n    });\n  }\n  getData(id, urls) {\n    console.log('id:', id);\n    console.log('urls:', urls);\n    const urlsArray = urls.split(',');\n    console.log('urlsArray:', urlsArray);\n    const segmentosPorUrl = urlsArray.map(url => url.split('/').pop());\n    console.log('segmentosPorUrl:', segmentosPorUrl);\n    this.dashboardCharacterServiceService.getData(\"\").subscribe(data => {\n      this.charactersResponse = data;\n      this.cdr.detectChanges();\n    }, error => {\n      console.error(\"Hubo un error:\", error);\n    });\n  }\n}\nDashboardCharacterComponent.ɵfac = function DashboardCharacterComponent_Factory(t) {\n  return new (t || DashboardCharacterComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.DashboardCharacterServiceService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDashboardCharacterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardCharacterComponent,\n  selectors: [[\"app-dashboard-character\"]],\n  decls: 16,\n  vars: 0,\n  template: function DashboardCharacterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\");\n      i0.ɵɵtext(9, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\");\n      i0.ɵɵtext(13, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15, \"dashboard-character works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,2BAA2B;EAEtCC,YAAoBC,KAAqB,EAAUC,gCAAkE,EAAUC,GAAsB;IAAjI,UAAK,GAALF,KAAK;IAA0B,qCAAgC,GAAhCC,gCAAgC;IAA4C,QAAG,GAAHC,GAAG;EAAuB;EAEzJC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MACvB,MAAMG,IAAI,GAAGH,MAAM,CAAC,YAAY,CAAC;MACjC,IAAI,CAACI,OAAO,CAACF,EAAE,EAAEC,IAAI,CAAC;IACxB,CAAC,CAAC;EACJ;EAEAC,OAAO,CAACF,EAAU,EAAEC,IAAY;IAC9BE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEJ,EAAE,CAAC;IACtBG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,IAAI,CAAC;IAC1B,MAAMI,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC;IACjCH,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,SAAS,CAAC;IACpC,MAAME,eAAe,GAAGF,SAAS,CAACG,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACH,KAAK,CAAC,GAAG,CAAC,CAACI,GAAG,EAAE,CAAC;IAClEP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEG,eAAe,CAAC;IAChD,IAAI,CAACZ,gCAAgC,CAACO,OAAO,CAAC,EAAE,CAAC,CAACH,SAAS,CACxDY,IAAI,IAAI;MACP,IAAI,CAACC,kBAAkB,GAAGD,IAAI;MAC9B,IAAI,CAACf,GAAG,CAACiB,aAAa,EAAE;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRX,OAAO,CAACW,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC,CAAC,CACF;EACH;;AA5BWtB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAuB;EAAAC;EAAAC;EAAAC;IAAA;MCXxCC,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI;MACjCA,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI;MACjCA,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI;MACjCA,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI;MACjCA,yBAAG;MAAAA,0CAA0B;MAAAA,iBAAI;MACjCA,0BAAG;MAAAA,2CAA0B;MAAAA,iBAAI;MACjCA,0BAAG;MAAAA,2CAA0B;MAAAA,iBAAI;MACjCA,0BAAG;MAAAA,2CAA0B;MAAAA,iBAAI","names":["DashboardCharacterComponent","constructor","route","dashboardCharacterServiceService","cdr","ngOnInit","params","subscribe","id","urls","getData","console","log","urlsArray","split","segmentosPorUrl","map","url","pop","data","charactersResponse","detectChanges","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard-character\\dashboard-character.component.ts","D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard-character\\dashboard-character.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DashboardCharacterServiceService } from '../dashboard-character/dashboard-character-service.service';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { CharactersResponse } from '../shared/models/characters-response';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-dashboard-character',\n  templateUrl: './dashboard-character.component.html',\n  styleUrls: ['./dashboard-character.component.css']\n})\nexport class DashboardCharacterComponent {\n  charactersResponse?: CharactersResponse;\n  constructor(private route: ActivatedRoute, private dashboardCharacterServiceService: DashboardCharacterServiceService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\r\n      const urls = params['characters'];\n      this.getData(id, urls);\r\n    });\n  }\n\n  getData(id: number, urls: string): void {\n    console.log('id:', id);\r\n    console.log('urls:', urls);\r\n    const urlsArray = urls.split(',');\n    console.log('urlsArray:', urlsArray);\n    const segmentosPorUrl = urlsArray.map(url => url.split('/').pop());\n    console.log('segmentosPorUrl:', segmentosPorUrl);\n    this.dashboardCharacterServiceService.getData(\"\").subscribe(\r\n      (data) => {\r\n        this.charactersResponse = data;\n        this.cdr.detectChanges();\r\n      },\r\n      (error) => {\r\n        console.error(\"Hubo un error:\", error)\r\n      }\r\n    );\r\n  }\n}\n","<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n<p>dashboard-character works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}