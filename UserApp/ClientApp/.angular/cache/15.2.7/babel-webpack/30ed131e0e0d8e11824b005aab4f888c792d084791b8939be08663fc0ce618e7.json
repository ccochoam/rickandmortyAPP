{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../dashboard/dashboard.service\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardComponent_div_0_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.air_date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.episode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r3.url);\n  }\n}\nfunction DashboardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Episodios de Rick & Morty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n    i0.ɵɵtext(8, \"T\\u00EDtulo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Primera emisi\\u00F3n\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Episodio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"URL\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 2)(16, \"div\", 3)(17, \"tbody\", 3);\n    i0.ɵɵtemplate(18, DashboardComponent_div_0_tr_18_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"tfoot\")(20, \"tr\")(21, \"td\", 5)(22, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_0_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.previousPage());\n    });\n    i0.ɵɵtext(23, \"P\\u00E1gina anterior\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_0_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.nextPage());\n    });\n    i0.ɵɵtext(25, \"P\\u00E1gina siguiente\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.episodesResponse.results);\n  }\n}\nfunction DashboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No se encontraron datos.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DashboardComponent {\n  constructor(dashboardService, cdr) {\n    this.dashboardService = dashboardService;\n    this.cdr = cdr;\n    this.currentPage = 1;\n    this.totalPages = 0;\n  }\n  ngOnInit() {\n    this.getData(this.currentPage);\n  }\n  goToPage(pageNumber) {\n    this.currentPage = pageNumber;\n  }\n  getData(pageNumber) {\n    this.currentPage = pageNumber;\n    this.dashboardService.getData(this.currentPage).subscribe(data => {\n      console.log('resDashboardComponent:', data);\n      this.totalPages = data.info.pages;\n      this.episodesResponse = data;\n      this.cdr.detectChanges();\n    }, error => {\n      console.error('Error al obtener datos:', error);\n    });\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.getData(this.currentPage - 1);\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.getData(this.currentPage + 1);\n    }\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [1, \"table-container\"], [1, \"scrollable-content\"], [1, \"scrollable-body\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"5\"], [3, \"click\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DashboardComponent_div_0_Template, 26, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, DashboardComponent_div_1_Template, 3, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.episodesResponse && ctx.episodesResponse.results && ctx.episodesResponse.results.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.episodesResponse || !ctx.episodesResponse.results || ctx.episodesResponse.results.length === 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".table-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  overflow-x: auto;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  border-collapse: collapse;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.scrollable-body[_ngcontent-%COMP%] {\\r\\n  display: table-row-group;\\r\\n  max-height: 425px !important;\\r\\n  overflow-y: auto !important;\\r\\n}\\r\\n.scrollable-content[_ngcontent-%COMP%] {\\r\\n  display: block; \\r\\n  overflow-x: auto; \\r\\n}\\r\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n  border: 1px solid #ddd;\\r\\n  padding: 8px;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\nth[_ngcontent-%COMP%] {\\r\\n  background-color: #f2f2f2;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px;\\r\\n  margin: 5px;\\r\\n  background-color: #3498db;\\r\\n  color: #fff;\\r\\n  border: none;\\r\\n  border-radius: 5px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n  button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #1861ac;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdDQUFnQztBQUNoQztFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtFQUN6QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsNEJBQTRCO0VBQzVCLDJCQUEyQjtBQUM3QjtBQUNBO0VBQ0UsY0FBYyxFQUFFLHNDQUFzQztFQUN0RCxnQkFBZ0IsRUFBRSwrQ0FBK0M7QUFDbkU7QUFDQTtFQUNFLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7RUFFRTtJQUNFLHlCQUF5QjtFQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIG1pLWNvbXBvbmVudGUuY29tcG9uZW50LmNzcyAqL1xyXG4udGFibGUtY29udGFpbmVyIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5zY3JvbGxhYmxlLWJvZHkge1xyXG4gIGRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cDtcclxuICBtYXgtaGVpZ2h0OiA0MjVweCAhaW1wb3J0YW50O1xyXG4gIG92ZXJmbG93LXk6IGF1dG8gIWltcG9ydGFudDtcclxufVxyXG4uc2Nyb2xsYWJsZS1jb250ZW50IHtcclxuICBkaXNwbGF5OiBibG9jazsgLyogTnVldm8gY29udGVuZWRvciBwYXJhIHNjcm9sbCBlbiBYICovXHJcbiAgb3ZlcmZsb3cteDogYXV0bzsgLyogQXNlZ3VyYSBlbCBzY3JvbGwgZW4gWCBjdWFuZG8gZXMgbmVjZXNhcmlvICovXHJcbn1cclxudGgsIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xyXG4gIHBhZGRpbmc6IDhweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG50aCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIG1hcmdpbjogNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbiAgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxODYxYWM7XHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;IAgBgBA,0BAAiD;IACzCA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAE1BA,0BAAI;IAAAA,YAAa;IAAAA,iBAAK;;;;IAJlBA,eAAc;IAAdA,iCAAc;IACdA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAiB;IAAjBA,oCAAiB;IAEjBA,eAAa;IAAbA,gCAAa;;;;;;IArBrCA,2BAAiG;IACzFA,yCAAyB;IAAAA,iBAAK;IAClCA,8BAA6B;IAITA,2BAAM;IAAAA,iBAAK;IACfA,0BAAI;IAAAA,qCAAe;IAAAA,iBAAK;IACxBA,2BAAI;IAAAA,yBAAQ;IAAAA,iBAAK;IAEjBA,2BAAI;IAAAA,oBAAG;IAAAA,iBAAK;IAGpBA,+BAAgC;IAG5BA,yEAMK;IACTA,iBAAQ;IAGRA,8BAAO;IAGaA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAACA,qCAAe;IAAAA,iBAAS;IACzDA,kCAA6B;IAArBA;MAAAA;MAAA;MAAA,OAASA,gCAAU;IAAA,EAAC;IAACA,sCAAgB;IAAAA,iBAAS;;;;IAd1CA,gBAA2B;IAA3BA,yDAA2B;;;;;IAqB3DA,2BAAqG;IAC9FA,wCAAwB;IAAAA,iBAAI;;;AC3BvC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,gBAAkC,EAAUC,GAAsB;IAAlE,qBAAgB,GAAhBD,gBAAgB;IAA4B,QAAG,GAAHC,GAAG;IAF3D,gBAAW,GAAW,CAAC;IACvB,eAAU,GAAW,CAAC;EAC4D;EAE1FC,QAAQ;IACN,IAAI,CAACC,OAAO,CAAC,IAAI,CAACC,WAAW,CAAC;EAChC;EACAC,QAAQ,CAACC,UAAkB;IAEzB,IAAI,CAACF,WAAW,GAAGE,UAAU;EAC/B;EACAH,OAAO,CAACG,UAAkB;IACxB,IAAI,CAACF,WAAW,GAAGE,UAAU;IAC7B,IAAI,CAACN,gBAAgB,CAACG,OAAO,CAAC,IAAI,CAACC,WAAW,CAAC,CAACG,SAAS,CACtDC,IAAI,IAAI;MACPC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,IAAI,CAAC;MAC3C,IAAI,CAACG,UAAU,GAAGH,IAAI,CAACI,IAAI,CAACC,KAAK;MACjC,IAAI,CAACC,gBAAgB,GAAGN,IAAI;MAC5B,IAAI,CAACP,GAAG,CAACc,aAAa,EAAE;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRP,OAAO,CAACO,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EACAC,YAAY;IACV,IAAI,IAAI,CAACb,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACD,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;;EAEtC;EACAc,QAAQ;IACN,IAAI,IAAI,CAACd,WAAW,GAAG,IAAI,CAACO,UAAU,EAAE;MACtC,IAAI,CAACR,OAAO,CAAC,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;;EAEtC;;AApCWN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX/B1B,oEAoCM;MACFA,mEAEM;;;MAvCJA,sHAAyF;MAqCrFA,eAA6F;MAA7FA,0HAA6F","names":["i0","DashboardComponent","constructor","dashboardService","cdr","ngOnInit","getData","currentPage","goToPage","pageNumber","subscribe","data","console","log","totalPages","info","pages","episodesResponse","detectChanges","error","previousPage","nextPage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard\\dashboard.component.html","D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["<div *ngIf=\"episodesResponse && episodesResponse.results && episodesResponse.results.length > 0\">\n    <h2>Episodios de Rick & Morty</h2>\n    <div class=\"table-container\">\n        <table>\n            <thead>\n                <tr>\n                    <th>Título</th>\n                    <th>Primera emisión</th>\n                    <th>Episodio</th>\n                    <!-- <th>Personajes</th> -->\n                    <th>URL</th>\n                </tr>\n            </thead>\n            <div class=\"scrollable-content\">\n                <div class=\"scrollable-body\">\n<tbody class=\"scrollable-body\">\n                <tr *ngFor=\"let row of episodesResponse.results\">\n                    <td>{{ row.name }}</td>\n                    <td>{{ row.air_date }}</td>\n                    <td>{{ row.episode }}</td>\n                    <!-- <td>{{ row.characters }}</td> -->\n                    <td>{{ row.url }}</td>\n                </tr>\n            </tbody>\n            </div>\n            </div>\n            <tfoot>\n                <tr>\n                    <td colspan=\"5\">\n                        <button (click)=\"previousPage()\">Página anterior</button>\n                        <button (click)=\"nextPage()\">Página siguiente</button>\n                    </td>\n                </tr>\n            </tfoot>\n        </table>\n</div>\n</div>\n    <div *ngIf=\"!episodesResponse || !episodesResponse.results || episodesResponse.results.length === 0\">\n        <p>No se encontraron datos.</p>\n    </div>\n","import { Component } from '@angular/core';\nimport { DashboardService } from '../dashboard/dashboard.service';\nimport { EpisodesResponse } from '../dashboard/interfaces/episodes-response';\nimport { Episode } from '../dashboard/interfaces/episode';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  episodesResponse?: EpisodesResponse;\n  private currentPage: number = 1;\n  private totalPages: number = 0;\n  constructor(private dashboardService: DashboardService, private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.getData(this.currentPage);\n  }\n  goToPage(pageNumber: number): void {\r\n\n    this.currentPage = pageNumber;\n  }\n  getData(pageNumber: number): void {\n    this.currentPage = pageNumber;\n    this.dashboardService.getData(this.currentPage).subscribe(\n      (data) => {\n        console.log('resDashboardComponent:', data);\n        this.totalPages = data.info.pages;\n        this.episodesResponse = data;\n        this.cdr.detectChanges();\n      },\n      (error) => {\n        console.error('Error al obtener datos:', error);\n      }\n    );\n  }\n  previousPage(): void {\n    if (this.currentPage > 1) {\r\n      this.getData(this.currentPage - 1);\r\n    }\n  }\n  nextPage(): void {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.getData(this.currentPage + 1);\r\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}