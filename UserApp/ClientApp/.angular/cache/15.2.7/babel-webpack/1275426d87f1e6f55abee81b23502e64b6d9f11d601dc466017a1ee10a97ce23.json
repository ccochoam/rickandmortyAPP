{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DashboardService {\n  constructor(http) {\n    this.http = http;\n    //private apiUrl = 'https://rickandmortyapi.com/api/';\n    this.apiUrl = 'https://rickandmortyapi.com/api/episode';\n  }\n  getData() {\n    var res = this.http.get(this.apiUrl);\n    console.log(\"res:\", res);\n    return res;\n  }\n}\nDashboardService.ɵfac = function DashboardService_Factory(t) {\n  return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n};\nDashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DashboardService,\n  factory: DashboardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB;IACQ,WAAM,GAAG,yCAAyC;EAElB;EAExCC,OAAO;IACL,IAAIC,GAAG,GAAG,IAAI,CAACF,IAAI,CAACG,GAAG,CAAmB,IAAI,CAACC,MAAM,CAAC;IACtDC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,GAAG,CAAC;IACxB,OAAOA,GAAG;EACZ;;AAXWJ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAS,SAAhBT,gBAAgB;EAAAU,YAFf;AAAM","names":["DashboardService","constructor","http","getData","res","get","apiUrl","console","log","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\dashboard\\dashboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Dashboard } from '../dashboard/dashboard';\nimport { EpisodesResponse } from '../dashboard/interfaces/episodes-response';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  //private apiUrl = 'https://rickandmortyapi.com/api/';\n  private apiUrl = 'https://rickandmortyapi.com/api/episode';\n\n  constructor(private http: HttpClient) { }\n\n  getData(): Observable<EpisodesResponse> {\n    var res = this.http.get<EpisodesResponse>(this.apiUrl);\n    console.log(\"res:\", res);\n    return res;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}