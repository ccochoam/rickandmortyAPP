{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class RegisterService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.apiUrl = 'https://pruebas.midasoft.co:5443/Apis_DLLO/Seleccion/api/SOL/RegistroInicialSolicitante';\n  }\n  register(user) {\n    // Asegúrate de que la estructura de 'user' coincida con lo que el backend espera\n    return this.http.post(this.apiUrl, user).pipe(catchError(error => {\n      console.error('Error en la solicitud POST:', error);\n      return of(\"ok\");\n    }));\n    //console.log('res: ', res);\n    //return res;\n  }\n}\n\nRegisterService.ɵfac = function RegisterService_Factory(t) {\n  return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterService,\n  factory: RegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,UAAU,QAAQ,gBAAgB;;;;AAM3C,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB,EAAUC,KAAa;IAAvC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;IAD3C,WAAM,GAAG,yFAAyF;EAC3C;EAC/DC,QAAQ,CAACC,IAAW;IAClB;IACA,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEF,IAAI,CAAC,CACrCG,IAAI,CACHT,UAAU,CAAEU,KAAK,IAAI;MACnBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAOE,EAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH;IACH;IACA;EACF;;;AAdWX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAY,SAAfZ,eAAe;EAAAa,YAFd;AAAM","names":["catchError","RegisterService","constructor","http","route","register","user","post","apiUrl","pipe","error","console","of","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\register\\register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Users } from '../user/users';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { error } from 'console';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  private apiUrl = 'https://pruebas.midasoft.co:5443/Apis_DLLO/Seleccion/api/SOL/RegistroInicialSolicitante';\r\n  constructor(private http: HttpClient, private route: Router) { }\r\n  register(user: Users): Observable<string> {\r\n    // Asegúrate de que la estructura de 'user' coincida con lo que el backend espera\r\n    return this.http.post(this.apiUrl, user)\r\n      .pipe(\r\n        catchError((error) => {\r\n          console.error('Error en la solicitud POST:', error);\r\n          return of(\"ok\");\r\n        })\r\n      );\r\n    //console.log('res: ', res);\r\n    //return res;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}