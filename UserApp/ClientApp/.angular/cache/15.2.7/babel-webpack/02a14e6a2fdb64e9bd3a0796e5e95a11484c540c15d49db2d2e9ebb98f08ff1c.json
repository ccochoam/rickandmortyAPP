{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class RegisterService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.baseUrl = \"https://localhost:7228/api/\";\n  }\n  register(values) {\n    return this.http.post(this.baseUrl + '../login/login', values).pipe(map(users => {\n      localStorage.setItem('username', users.displayName);\n    }));\n  }\n}\nRegisterService.ɵfac = function RegisterService_Factory(t) {\n  return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterService,\n  factory: RegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,GAAG,QAAQ,MAAM;;;;AAK1B,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB,EAAUC,KAAa;IAAvC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;IADnD,YAAO,GAAG,6BAA6B;EACwB;EAC/DC,QAAQ,CAACC,MAAW;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAQ,IAAI,CAACC,OAAO,GAAG,gBAAgB,EAAEF,MAAM,CAAC,CAACG,IAAI,CACxET,GAAG,CAACU,KAAK,IAAG;MACVC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAACG,WAAW,CAAC;IACrD,CAAC,CAAC,CACH;EACH;;AATWZ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAFd;AAAM","names":["map","RegisterService","constructor","http","route","register","values","post","baseUrl","pipe","users","localStorage","setItem","displayName","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyectos\\Praxedes\\UserApp\\UserApp\\ClientApp\\src\\app\\register\\register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Users } from '../user/users';\nimport { map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n  baseUrl = \"https://localhost:7228/api/\";\n  constructor(private http: HttpClient, private route: Router) { }\n  register(values: any) {\n    return this.http.post<Users>(this.baseUrl + '../login/login', values).pipe(\n      map(users => {\n        localStorage.setItem('username', users.displayName);\n      })\n    )\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}